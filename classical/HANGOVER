/*How far can you make a stack of cards overhang a table? 
If you have one card, you can create a maximum overhang of half a card length. 
(We're assuming that the cards must be perpendicular to the table.) 
With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 + 1/3 = 5/6 card lengths. 
In general you can make n cards overhang by 1/2 + 1/3 + 1/4 + ... + 1/(n + 1) card lengths, where the top card overhangs the second by 1/2, the second overhangs tha third by 1/3, the third overhangs the fourth by 1/4, etc., and the bottom card overhangs the table by 1/(n + 1).
The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.
Input:
1.00
3.71
0.04
5.19
0.00
Output:
3 card(s)
61 card(s)
1 card(s)
273 card(s)
*/
#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
#define ll long long int
int main() 
{
    while (1)
    {
        float x;
        scanf("%f", &x);
        if ( x == 0.00)
            break;
        else
        {
            float sum=0.50;
            int noc = 1;
            ll num=1;
            ll denom =2;
            if ( sum > x)
                printf("%d card(s)\n",noc);
            else
            {
            noc=2;
            while ( sum < x)
            {
                
                sum+= (float)(1.00/(1.00+noc));
                if ( sum < x)
                noc++;
                else
                break;
                
            }
            printf("%d card(s)\n",noc);
            }
        }
    }
    
}
